#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

while [[ $# -gt 0 ]]; do
	case "$1" in
		-Command)
			if [[ $# -gt 1 ]]; then
				command="$2"
				shift 2
			else
				echo "Error: Missing argument after -Command" >&2
				exit 1
			fi
			;;
		-File)
			if [[ $# -gt 1 ]]; then
				File="$2"
				shift 2
			else
				echo "Error: Missing argument after -File" >&2
				exit 1
			fi
			;;
		*)
			remaining_args+=("$1")
			shift
			;;
	esac
done
parsed_args="${remaining_args[@]}"

# 测试/c/Windows以确定是否在Windows上运行
if [[ -d "/c/Windows" ]]; then
	# 对$SCRIPT_DIR进行Windows路径转换
	# 我们不能使用wslpath，因为它不是msys的一部分
	SCRIPT_DIR=$(echo "$SCRIPT_DIR" | sed -e 's/\/c/C:/g' -e 's/\//\\/g' -e 's/^\\//g')
fi

pwshCommand=""
NoExit="-NoExit"
NoLogo=""
if [[ -n "$File" ]]; then
	File=$(echo "$File" | sed -e 's/"/`"/g')
	pwshCommand="$pwshCommand ; . $File"
	NoExit=""
	NoLogo=" -NoLogo"
fi
if [[ -n "$command" ]]; then
	command=$(echo "$command" | sed -e 's/"/`"/g')
	pwshCommand="$pwshCommand ; Invoke-Expression \"$command\""
	NoExit=""
	NoLogo=" -NoLogo"
fi
pwsh $parsed_args -nologo $NoExit -command ". $SCRIPT_DIR/run.ps1$NoLogo$pwshCommand"
exit $?
